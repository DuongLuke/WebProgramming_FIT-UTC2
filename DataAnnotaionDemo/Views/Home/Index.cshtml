@model ValidationMessageDemo.Models.Student
@{
    ViewBag.Title = "Index";
}
<h2 style="color:blue">Student Information Enrollment </h2>
<p>
    @*Html.ValidationSummary("", new {@class = "text-danger"})*@
</p>
<div class="form-group">
    @using (Html.BeginForm())
    {

    <div class="form-row">
        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "form-label" }) @Html.TextBoxFor(model => model.Id, "", new { @class = "form-input" })
        @Html.ValidationMessageFor(model=>model.Id, "", new {@class="text-danger"})
        @*@ViewData["NameError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" }) @Html.TextBoxFor(model => model.Name, "", new { @class = "form-input" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        @*@ViewData["AgeError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" }) @Html.TextBoxFor(model => model.Age, "", new { @class = "form-input" })
        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        @*@ViewData["AgeError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "form-label" }) @Html.TextBoxFor(model => model.PhoneNumber, "", new {  @class = "form-input" })
        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        @*ViewData["PhoneError"]*@
    </div>
    <div class="form-row">

        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" }) @Html.TextBoxFor(model => model.Email, "", new { @class = "form-input" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        @*ViewData["EmailError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" }) @Html.PasswordFor(model => model.Password, new { @class = "form-input" })

        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        @*ViewData["PasswordError"]*@
    </div>
    @*<div class="form-row">
                @*using compare() in model
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" }) @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-input" })

            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            @*ViewData["ConfirmPasswordError"]
        </div>*@
    <div class="form-row">
        @Html.Label("Confirm Password: ", htmlAttributes: new { @class = "form-label" })
        @Html.Password("ConfirmPassword", "", new { @class = "form-input" })
        @Html.ValidationMessage("ConfirmPassword", "", new { @class = "text-danger" })
        @*ViewData["ConfirmPasswordError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
        <div class="form-radio">
            @Html.RadioButtonFor(model => model.Gender, "Male")
            <label>Male</label>
            @Html.Raw("&nbsp;")

            @Html.RadioButtonFor(model => model.Gender, "Female")
            <label>Female</label>
            @Html.Raw("&nbsp;")

            @Html.RadioButtonFor(model => model.Gender, "Others")
            <label>Others</label>
        </div>
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        @*ViewData["GenderError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.SchoolYear, htmlAttributes: new { @class = "form-label" })
        @Html.DropDownListFor(model => model.SchoolYear, new SelectList(new[] { "2020-2024", "2021-2025", "2022-2026", "2023-2027" }), "Select Year", new { @class = "form-input" })
        @Html.ValidationMessageFor(model => model.SchoolYear, "", new { @class = "text-danger" })
        @*ViewData["CountryError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "form-label" }) @Html.TextAreaFor(model => model.Note, 10, 70, new { @class = "form-input" })
        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        @*@ViewData["NoteError"]*@
    </div>
    <div class="form-row">
        @Html.LabelFor(model => model.Faculty, htmlAttributes: new { @class = "form-label" }) @Html.TextBoxFor(model => model.Faculty, new { @class = "form-input", @Value = "CNTT" , @readonly="true"})

    </div>
    <div class="form-row" id="cbAccept">
        @Html.CheckBox("AcceptTerm") @Html.Label(" I accept the terms")
        @Html.ValidationMessage("AcceptTerm", "", new { @class = "text-danger" })

        @*@ViewData["AcceptTermError"]*@
    </div>
    <div class="form-row">
        @Html.Hidden("id")
        <input type="submit" value="Submit" class="form-submit" />
    </div>
    @Html.Raw(ViewData["SuccessMessage"]);

    }
</div>
