@model IEnumerable<EF_DBFirstApproachDemo.Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="header-content">
    <h3 class="welcome-message">Welcome @Session["username"]</h3>
    @Html.ActionLink("Logout", "Logout", "Login", new { @class = "logout-link" })
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@{
    if (TempData["InsertMessage"] != null)
    {
        <p style="color:green; font-weight:bold;">
            @Html.Raw(TempData["InsertMessage"].ToString())
        </p> }
}

@{
    if (TempData["UpdateMessage"] != null)
    {
        <p style="color:green; font-weight:bold;">
            @Html.Raw(TempData["UpdateMessage"].ToString())
        </p> }
}
<p style="color:green; font-weight:bold;">@TempData["DeleteMessage"]</p>


@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <table>
        <tr>
            <th colspan="2">Search Product</th>
        </tr>
        <tr>
            <td><label for="Name">Name:</label></td>
            <td><input type="text" id="Name" name="Name" value="@Request.QueryString["Name"]" /></td>
        </tr>
        <tr>
            <td><label for="PriceFrom">Price:</label></td>
            <td>
                <input type="number" id="PriceFrom" name="PriceFrom" step="0.01" value="@Request.QueryString["PriceFrom"]" /> -
                <input type="number" id="PriceTo" name="PriceTo" step="0.01" value="@Request.QueryString["PriceTo"]" />
            </td>
        </tr>
        <tr>
            <td><label for="Storage">Storage:</label></td>
            <td>
                <select id="Storage" name="Storage">
                    <option value="">Select Storage</option>
                    <option value="32GB" @(Request.QueryString["Storage"] == "32GB" ? "selected" : "")>32GB</option>
                    <option value="64GB" @(Request.QueryString["Storage"] == "64GB" ? "selected" : "")>64GB</option>
                    <option value="128GB" @(Request.QueryString["Storage"] == "128GB" ? "selected" : "")>128GB</option>
                    <option value="256GB" @(Request.QueryString["Storage"] == "256GB" ? "selected" : "")>256GB</option>
                </select>
            </td>
        </tr>
        <tr>
            <td><label for="Category">Category:</label></td>
            <td>
                @Html.DropDownList("Category", (SelectList)ViewBag.Categories, "Select Category", new { @id = "Category", @Value = Request.QueryString["Category"] })
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" value="Search" />
            </td>
        </tr>
    </table>
}

@if (ViewBag.NoProductsFound)
{
    <div class="alert alert-warning">
        No products found matching your search criteria.
    </div>
}

<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Name)</th>
        <th>@Html.DisplayNameFor(model => model.FilePath)</th>
        <th>@Html.DisplayNameFor(model => model.Price)</th>
        <th>@Html.DisplayNameFor(model => model.Description)</th>
        <th>@Html.DisplayNameFor(model => model.storage)</th>
        <th>@Html.DisplayNameFor(model => model.create_date)</th>
        <th>@Html.DisplayNameFor(model => model.update_date)</th>
        <th>@Html.DisplayNameFor(model => model.Category.Name)</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Name)</td>
            <td>
                <img width="100" height="100" src="@Url.Content($"~/Content/images/Products/{item.FilePath}")" alt="Product Image" />
            </td>
            <td>@Html.DisplayFor(modelItem => item.Price)</td>
            <td>@Html.DisplayFor(modelItem => item.Description)</td>
            <td>@Html.DisplayFor(modelItem => item.storage)</td>
            <td>@Html.DisplayFor(modelItem => item.create_date)</td>
            <td>@Html.DisplayFor(modelItem => item.update_date)</td>
            <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                @Html.ActionLink("Details", "Details", new { id = item.id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.id })
            </td>
        </tr>
    }
</table>
