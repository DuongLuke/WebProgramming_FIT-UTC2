@model EF_DBFirstApproachDemo.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Product</h2>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<p style="color:green; font-weight:bold;">@Html.Raw(ViewBag.InsertMessage)</p>



@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-input" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "form-label" })
            <input class="form-input" type="file" name="ImageFile" required />
        </div>
        <div class="form-row">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-input" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-input" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.storage, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(model => model.storage, new SelectList(
                new List<SelectListItem>
                {
                    new SelectListItem { Text = "Select Storage", Value = "" },
                    new SelectListItem { Text = "32GB", Value = "32GB" },
                    new SelectListItem { Text = "64GB", Value = "64GB" },
                    new SelectListItem { Text = "128GB", Value = "128GB" },
                    new SelectListItem { Text = "256GB", Value = "256GB" }
                }, "Value", "Text"), "Select Storage", new { @class = "form-input" })
            @Html.ValidationMessageFor(model => model.storage, "", new { @class = "text-danger" })
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Category_id, "Category", htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(model => model.Category_id, (SelectList)ViewBag.Categories, "Select Category", new { @class = "form-input" })
            @Html.ValidationMessageFor(model => model.Category_id, "", new { @class = "text-danger" })
        </div>

        <div class="form-row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class = "btn btn-primary"  />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


